/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthedImport } from './routes/_authed'
import { Route as PublicIndexImport } from './routes/_public/index'
import { Route as PublicAuthImport } from './routes/_public/_auth'
import { Route as AuthedTeamImport } from './routes/_authed/team'
import { Route as AuthedSettingsImport } from './routes/_authed/settings'
import { Route as AuthedScheduleImport } from './routes/_authed/schedule'
import { Route as AuthedReportsImport } from './routes/_authed/reports'
import { Route as AuthedDashboardImport } from './routes/_authed/dashboard'
import { Route as AuthedAnalyticsImport } from './routes/_authed/analytics'
import { Route as AuthedAllHivesImport } from './routes/_authed/all-hives'
import { Route as AuthedAlertsImport } from './routes/_authed/alerts'
import { Route as AuthedAddNewHiveImport } from './routes/_authed/add-new-hive'
import { Route as PublicAuthSignupImport } from './routes/_public/_auth/signup'
import { Route as PublicAuthSigninImport } from './routes/_public/_auth/signin'
import { Route as PublicAuthResetPasswordImport } from './routes/_public/_auth/reset-password'
import { Route as PublicAuthForgotPasswordImport } from './routes/_public/_auth/forgot-password'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAuthRoute = PublicAuthImport.update({
  id: '/_auth',
  getParentRoute: () => PublicRoute,
} as any)

const AuthedTeamRoute = AuthedTeamImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedSettingsRoute = AuthedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedScheduleRoute = AuthedScheduleImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedReportsRoute = AuthedReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedDashboardRoute = AuthedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAnalyticsRoute = AuthedAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAllHivesRoute = AuthedAllHivesImport.update({
  id: '/all-hives',
  path: '/all-hives',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAlertsRoute = AuthedAlertsImport.update({
  id: '/alerts',
  path: '/alerts',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAddNewHiveRoute = AuthedAddNewHiveImport.update({
  id: '/add-new-hive',
  path: '/add-new-hive',
  getParentRoute: () => AuthedRoute,
} as any)

const PublicAuthSignupRoute = PublicAuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => PublicAuthRoute,
} as any)

const PublicAuthSigninRoute = PublicAuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => PublicAuthRoute,
} as any)

const PublicAuthResetPasswordRoute = PublicAuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => PublicAuthRoute,
} as any)

const PublicAuthForgotPasswordRoute = PublicAuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => PublicAuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_authed/add-new-hive': {
      id: '/_authed/add-new-hive'
      path: '/add-new-hive'
      fullPath: '/add-new-hive'
      preLoaderRoute: typeof AuthedAddNewHiveImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/alerts': {
      id: '/_authed/alerts'
      path: '/alerts'
      fullPath: '/alerts'
      preLoaderRoute: typeof AuthedAlertsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/all-hives': {
      id: '/_authed/all-hives'
      path: '/all-hives'
      fullPath: '/all-hives'
      preLoaderRoute: typeof AuthedAllHivesImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/analytics': {
      id: '/_authed/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AuthedAnalyticsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/reports': {
      id: '/_authed/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof AuthedReportsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/schedule': {
      id: '/_authed/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof AuthedScheduleImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/settings': {
      id: '/_authed/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthedSettingsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/team': {
      id: '/_authed/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof AuthedTeamImport
      parentRoute: typeof AuthedImport
    }
    '/_public/_auth': {
      id: '/_public/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicAuthImport
      parentRoute: typeof PublicImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/_auth/forgot-password': {
      id: '/_public/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof PublicAuthForgotPasswordImport
      parentRoute: typeof PublicAuthImport
    }
    '/_public/_auth/reset-password': {
      id: '/_public/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof PublicAuthResetPasswordImport
      parentRoute: typeof PublicAuthImport
    }
    '/_public/_auth/signin': {
      id: '/_public/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof PublicAuthSigninImport
      parentRoute: typeof PublicAuthImport
    }
    '/_public/_auth/signup': {
      id: '/_public/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof PublicAuthSignupImport
      parentRoute: typeof PublicAuthImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedAddNewHiveRoute: typeof AuthedAddNewHiveRoute
  AuthedAlertsRoute: typeof AuthedAlertsRoute
  AuthedAllHivesRoute: typeof AuthedAllHivesRoute
  AuthedAnalyticsRoute: typeof AuthedAnalyticsRoute
  AuthedDashboardRoute: typeof AuthedDashboardRoute
  AuthedReportsRoute: typeof AuthedReportsRoute
  AuthedScheduleRoute: typeof AuthedScheduleRoute
  AuthedSettingsRoute: typeof AuthedSettingsRoute
  AuthedTeamRoute: typeof AuthedTeamRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedAddNewHiveRoute: AuthedAddNewHiveRoute,
  AuthedAlertsRoute: AuthedAlertsRoute,
  AuthedAllHivesRoute: AuthedAllHivesRoute,
  AuthedAnalyticsRoute: AuthedAnalyticsRoute,
  AuthedDashboardRoute: AuthedDashboardRoute,
  AuthedReportsRoute: AuthedReportsRoute,
  AuthedScheduleRoute: AuthedScheduleRoute,
  AuthedSettingsRoute: AuthedSettingsRoute,
  AuthedTeamRoute: AuthedTeamRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface PublicAuthRouteChildren {
  PublicAuthForgotPasswordRoute: typeof PublicAuthForgotPasswordRoute
  PublicAuthResetPasswordRoute: typeof PublicAuthResetPasswordRoute
  PublicAuthSigninRoute: typeof PublicAuthSigninRoute
  PublicAuthSignupRoute: typeof PublicAuthSignupRoute
}

const PublicAuthRouteChildren: PublicAuthRouteChildren = {
  PublicAuthForgotPasswordRoute: PublicAuthForgotPasswordRoute,
  PublicAuthResetPasswordRoute: PublicAuthResetPasswordRoute,
  PublicAuthSigninRoute: PublicAuthSigninRoute,
  PublicAuthSignupRoute: PublicAuthSignupRoute,
}

const PublicAuthRouteWithChildren = PublicAuthRoute._addFileChildren(
  PublicAuthRouteChildren,
)

interface PublicRouteChildren {
  PublicAuthRoute: typeof PublicAuthRouteWithChildren
  PublicIndexRoute: typeof PublicIndexRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicAuthRoute: PublicAuthRouteWithChildren,
  PublicIndexRoute: PublicIndexRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PublicAuthRouteWithChildren
  '/add-new-hive': typeof AuthedAddNewHiveRoute
  '/alerts': typeof AuthedAlertsRoute
  '/all-hives': typeof AuthedAllHivesRoute
  '/analytics': typeof AuthedAnalyticsRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/reports': typeof AuthedReportsRoute
  '/schedule': typeof AuthedScheduleRoute
  '/settings': typeof AuthedSettingsRoute
  '/team': typeof AuthedTeamRoute
  '/': typeof PublicIndexRoute
  '/forgot-password': typeof PublicAuthForgotPasswordRoute
  '/reset-password': typeof PublicAuthResetPasswordRoute
  '/signin': typeof PublicAuthSigninRoute
  '/signup': typeof PublicAuthSignupRoute
}

export interface FileRoutesByTo {
  '': typeof PublicAuthRouteWithChildren
  '/add-new-hive': typeof AuthedAddNewHiveRoute
  '/alerts': typeof AuthedAlertsRoute
  '/all-hives': typeof AuthedAllHivesRoute
  '/analytics': typeof AuthedAnalyticsRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/reports': typeof AuthedReportsRoute
  '/schedule': typeof AuthedScheduleRoute
  '/settings': typeof AuthedSettingsRoute
  '/team': typeof AuthedTeamRoute
  '/': typeof PublicIndexRoute
  '/forgot-password': typeof PublicAuthForgotPasswordRoute
  '/reset-password': typeof PublicAuthResetPasswordRoute
  '/signin': typeof PublicAuthSigninRoute
  '/signup': typeof PublicAuthSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_authed/add-new-hive': typeof AuthedAddNewHiveRoute
  '/_authed/alerts': typeof AuthedAlertsRoute
  '/_authed/all-hives': typeof AuthedAllHivesRoute
  '/_authed/analytics': typeof AuthedAnalyticsRoute
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/_authed/reports': typeof AuthedReportsRoute
  '/_authed/schedule': typeof AuthedScheduleRoute
  '/_authed/settings': typeof AuthedSettingsRoute
  '/_authed/team': typeof AuthedTeamRoute
  '/_public/_auth': typeof PublicAuthRouteWithChildren
  '/_public/': typeof PublicIndexRoute
  '/_public/_auth/forgot-password': typeof PublicAuthForgotPasswordRoute
  '/_public/_auth/reset-password': typeof PublicAuthResetPasswordRoute
  '/_public/_auth/signin': typeof PublicAuthSigninRoute
  '/_public/_auth/signup': typeof PublicAuthSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/add-new-hive'
    | '/alerts'
    | '/all-hives'
    | '/analytics'
    | '/dashboard'
    | '/reports'
    | '/schedule'
    | '/settings'
    | '/team'
    | '/'
    | '/forgot-password'
    | '/reset-password'
    | '/signin'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/add-new-hive'
    | '/alerts'
    | '/all-hives'
    | '/analytics'
    | '/dashboard'
    | '/reports'
    | '/schedule'
    | '/settings'
    | '/team'
    | '/'
    | '/forgot-password'
    | '/reset-password'
    | '/signin'
    | '/signup'
  id:
    | '__root__'
    | '/_authed'
    | '/_public'
    | '/_authed/add-new-hive'
    | '/_authed/alerts'
    | '/_authed/all-hives'
    | '/_authed/analytics'
    | '/_authed/dashboard'
    | '/_authed/reports'
    | '/_authed/schedule'
    | '/_authed/settings'
    | '/_authed/team'
    | '/_public/_auth'
    | '/_public/'
    | '/_public/_auth/forgot-password'
    | '/_public/_auth/reset-password'
    | '/_public/_auth/signin'
    | '/_public/_auth/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthedRoute: typeof AuthedRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthedRoute: AuthedRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authed",
        "/_public"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/add-new-hive",
        "/_authed/alerts",
        "/_authed/all-hives",
        "/_authed/analytics",
        "/_authed/dashboard",
        "/_authed/reports",
        "/_authed/schedule",
        "/_authed/settings",
        "/_authed/team"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/_auth",
        "/_public/"
      ]
    },
    "/_authed/add-new-hive": {
      "filePath": "_authed/add-new-hive.tsx",
      "parent": "/_authed"
    },
    "/_authed/alerts": {
      "filePath": "_authed/alerts.tsx",
      "parent": "/_authed"
    },
    "/_authed/all-hives": {
      "filePath": "_authed/all-hives.tsx",
      "parent": "/_authed"
    },
    "/_authed/analytics": {
      "filePath": "_authed/analytics.tsx",
      "parent": "/_authed"
    },
    "/_authed/dashboard": {
      "filePath": "_authed/dashboard.tsx",
      "parent": "/_authed"
    },
    "/_authed/reports": {
      "filePath": "_authed/reports.tsx",
      "parent": "/_authed"
    },
    "/_authed/schedule": {
      "filePath": "_authed/schedule.tsx",
      "parent": "/_authed"
    },
    "/_authed/settings": {
      "filePath": "_authed/settings.tsx",
      "parent": "/_authed"
    },
    "/_authed/team": {
      "filePath": "_authed/team.tsx",
      "parent": "/_authed"
    },
    "/_public/_auth": {
      "filePath": "_public/_auth.tsx",
      "parent": "/_public",
      "children": [
        "/_public/_auth/forgot-password",
        "/_public/_auth/reset-password",
        "/_public/_auth/signin",
        "/_public/_auth/signup"
      ]
    },
    "/_public/": {
      "filePath": "_public/index.tsx",
      "parent": "/_public"
    },
    "/_public/_auth/forgot-password": {
      "filePath": "_public/_auth/forgot-password.tsx",
      "parent": "/_public/_auth"
    },
    "/_public/_auth/reset-password": {
      "filePath": "_public/_auth/reset-password.tsx",
      "parent": "/_public/_auth"
    },
    "/_public/_auth/signin": {
      "filePath": "_public/_auth/signin.tsx",
      "parent": "/_public/_auth"
    },
    "/_public/_auth/signup": {
      "filePath": "_public/_auth/signup.tsx",
      "parent": "/_public/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
